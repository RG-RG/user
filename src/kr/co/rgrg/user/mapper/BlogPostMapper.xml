<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.rgrg.user.blogpost">

  	<select id="selectPostDetail" parameterType="int"
  	resultType="kr.co.rgrg.user.blog.domain.PostDetailDomain">
		select post.post_num, nickname, post_title, to_char(post.input_date, 'yyyy.mm.dd hh24:mi') input_date, post_content, hidden_flag, like_cnt, comment_cnt
		from post, member,
				(select post_num, count(post_num) like_cnt
				from like_post
				where post_num=#{ post_num }
				group by post_num) like_post,
				(select post_num, count(post_num) comment_cnt
				from comm
				where post_num=#{ post_num } and delete_flag='F'
				group by post_num) comm
		where post.id=member.id
				and post.post_num=like_post.post_num(+)
				and post.post_num=comm.post_num(+)
				and post.post_num=#{ post_num }
				and post.delete_flag='F'
	</select>
	
  	<select id="selectPostTagList" parameterType="int" resultType="String">
	  	select tag_name
		from tag
		where post_num=#{ post_num }
	</select>
	
  	<select id="selectPostProfile" parameterType="int" resultType="kr.co.rgrg.user.blog.domain.PostProfileDomain">
	  	select member.id, profile_img, nickname, statement_msg, github, website
		from member, post
		where member.id=post.id and post_num=#{ post_num }
	</select>
	
  	<select id="selectCommList" parameterType="int" resultType="kr.co.rgrg.user.blog.domain.CommDomain">
		select comm_num, member.id, profile_img, nickname, comm_content, to_char(comm.input_date, 'yyyy:mm:dd hh24:mi') input_date
		from member, comm
		where post_num=#{ post_num } and member.id=comm.id and delete_flag='F'
		order by input_date
	</select>
	
	<select id="selectFollow" parameterType="kr.co.rgrg.user.blog.vo.FollowerVO" resultType="String">
		select id
		from follower
		where id=#{id} and follower_id=#{follower_id}
	</select>
	
	<select id="selectLikePost" parameterType="kr.co.rgrg.user.blog.vo.LikePostVO" resultType="String">
		select id
		from like_post
		where id=#{id} and post_num=#{post_num}
	</select>
	
	<update id="updatePostDeletFlag" parameterType="kr.co.rgrg.user.blog.vo.PostDeleteVO">
		update post
		set	delete_flag='T', thumbnail = '', post_title='', post_content = '', publish_flag='', hidden_flag=''
		where post_num = #{post_num} and id = #{id}
	</update>
	
	<insert id="insertComm" parameterType="kr.co.rgrg.user.blog.vo.AddCommVO">
		insert into comm(COMM_NUM, ID, POST_NUM, COMM_CONTENT)
		values(seq_comm_num.nextval, #{id}, #{post_num}, #{comm_content})
	</insert>
	
	<select id="selectAddComm" parameterType="kr.co.rgrg.user.blog.vo.AddCommVO" 
	resultType="kr.co.rgrg.user.blog.domain.CommDomain">
		select comm_num, id, profile_img, nickname, comm_content, to_char(input_date, 'yyyy:mm:dd hh24:mi') input_date
		from (select comm_num, member.id, profile_img, nickname, comm_content, comm.input_date, row_number() over(order by comm.input_date desc) rnum
			from member, comm
			where member.id=comm.id and comm.id=#{id} and post_num=#{post_num} and comm_content=#{comm_content})
		where rnum=1
	</select>
	
	<update id="updateComm" parameterType="kr.co.rgrg.user.blog.vo.ModifyCommVO">
		update comm
		set comm_content=#{comm_content}
		where comm_num=#{comm_num}
	</update>
	
	<update id="updateCommDeleteFlag" parameterType="kr.co.rgrg.user.blog.vo.RemoveCommVO">
		update comm
		set delete_flag='T', comm_content=''
		where id=#{id} and comm_num=#{comm_num}
	</update>
</mapper>